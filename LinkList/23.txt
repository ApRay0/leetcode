    ListNode* merge2(ListNode* l1,ListNode* l2){
        ListNode* res=new ListNode(-1);
        ListNode* p=res;
        while(l1&&l2){
            if (l1->val>l2->val){
                p->next=l2;
                l2=l2->next;
            }
            else{
                p->next=l1;
                l1=l1->next;
            }
            p=p->next;
        }
        if (l1) p->next=l1;
        else p->next=l2;
        return res->next;
    }
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.empty()){
            return nullptr;
        }
        while (lists.size()>1){
            lists.push_back(merge2(lists[0],lists[1]));
            lists.erase(lists.begin());
            lists.erase(lists.begin());
        }
        return lists.front();
    }